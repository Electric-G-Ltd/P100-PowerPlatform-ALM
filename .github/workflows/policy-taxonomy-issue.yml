name: Policy - Taxonomy Labels on Issues

on:
  issues:
    types: [opened, labeled, unlabeled, edited]

jobs:
  enforce-taxonomy:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Check Issue Labels for Taxonomy Compliance
        uses: actions/github-script@v7
        with:
          script: |
            // Define label categories (exact, case-insensitive match)
            // Canonical taxonomy from governance/label_taxonomy.md
            const topicLabels = [
              '1 Topic: Active',
              '1 Topic: Power Platform ALM',
              '1 Topic: Research'
            ];
            const actionLabels = [
              '2 Action: Archive',
              '2 Action: Automate',
              '2 Action: Configure',
              '2 Action: Decommission',
              '2 Action: Deploy',
              '2 Action: Document Process',
              '2 Action: Export Solution',
              '2 Action: Import Solution',
              '2 Action: Package Solution',
              '2 Action: Raise a PR',
              '2 Action: Raise an Issue',
              '2 Action: Refactor',
              '2 Action: Sync',
              '2 Action: Test'
            ];
            const artefactLabels = [
              '3 Artefact: Agent Orchestration Logic',
              '3 Artefact: Copilot Studio Action',
              '3 Artefact: Custom Connectors',
              '3 Artefact: Dataverse Tables and Relationships',
              '3 Artefact: Diagram',
              '3 Artefact: Documentation',
              '3 Artefact: Environmental Variables',
              '3 Artefact: GitHub Action',
              '3 Artefact: GitHub App',
              '3 Artefact: GitHub Flow',
              '3 Artefact: GitHub Script',
              '3 Artefact: Json Configuration',
              '3 Artefact: Plug In Assemblies'
            ];

            const labels = context.payload.issue.labels.map(l => l.name);

            function countMatching(labels, category) {
              return labels.filter(l => category.some(c => c.toLowerCase() === l.toLowerCase())).length;
            }

            const topicCount = countMatching(labels, topicLabels);
            const actionCount = countMatching(labels, actionLabels);
            const artefactCount = countMatching(labels, artefactLabels);

            let problems = [];
            if (topicCount !== 1) problems.push(`**Topic** (found ${topicCount}, expected 1)`);
            if (actionCount !== 1) problems.push(`**Action** (found ${actionCount}, expected 1)`);
            if (artefactCount !== 1) problems.push(`**Artefact** (found ${artefactCount}, expected 1)`);

            // Check for any extra (invalid) labels
            const allAllowed = [...topicLabels, ...actionLabels, ...artefactLabels];
            const invalidLabels = labels.filter(l => !allAllowed.includes(l));

            if (problems.length > 0 || invalidLabels.length > 0) {
              let msg = `❌ **Taxonomy Policy Violation**\n\nEvery issue must have exactly one label from each category:\n- Topic\n- Action\n- Artefact\n\nProblems detected:\n${problems.map(p => `- ${p}`).join('\n')}`;
              if (invalidLabels.length > 0) {
                msg += `\n- Invalid label(s) found: ${invalidLabels.join(', ')}. Only use labels from the approved taxonomy.`;
              }
              msg += `\n\nPlease edit the labels so there is one and only one from each category. If a label is missing, request @electricgltd to add it.`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: msg
              });
              core.setFailed('Taxonomy label requirements not met.');
            }
